name: Build Container Images

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build'
        required: true
        default: 'main'
      service_config:
        description: 'Service configuration (e.g. keeper-regular, keeper-metrics-only)'
        required: true
        default: 'default'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-public-image:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      image-digest: ${{ steps.build.outputs.digest }}
      branch: ${{ steps.branch.outputs.branch }}
      service-config: ${{ github.event.inputs.service_config || 'default' }}
    
    steps:
    - name: Determine branch
      id: branch
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "branch=${{ github.event.inputs.branch }}" >> $GITHUB_OUTPUT
        else
          echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
        fi

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: ${{ steps.branch.outputs.branch }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=${{ steps.branch.outputs.branch }}-${{ github.event.inputs.service_config || 'default' }}-{{sha}}
          type=raw,value=${{ steps.branch.outputs.branch }}-${{ github.event.inputs.service_config || 'default' }}-latest
          type=ref,event=pr

    - name: Build and push PUBLIC container (NO SECRETS)
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        # ONLY NON-SENSITIVE BUILD ARGS
        build-args: |
          SERVICE_CONFIG=${{ github.event.inputs.service_config || 'default' }}
          BUILD_DATE=${{ github.event.head_commit.timestamp }}
          VCS_REF=${{ github.sha }}
          BRANCH=${{ steps.branch.outputs.branch }}
          VERSION=${{ steps.meta.outputs.version }}
